import random

import matplotlib.pyplot as plt
import numpy as np
from geatpy.benchmarks.mops import dtlz, zdt, wfg, uf


def draw_pareto_2D(name, Proposal_obj, G_obj, DG_obj, LIMD_obj, ref):

    font_title = {'size': 18}
    font = {'size': 16}

    plt.title("Pareto Front of " + name, font_title)
    plt.xlabel("$f_1$", font)
    plt.ylabel("$f_2$", font)
    plt.scatter(G_obj[:, 0], G_obj[:, 1], marker="v", label="CC_NSGA3_G")
    plt.scatter(DG_obj[:, 0], DG_obj[:, 1], marker="^", label="CC_NSGA3_DG")
    plt.scatter(LIMD_obj[:, 0], LIMD_obj[:, 1], marker="+", label="CC_NSGA3_LIMD")
    plt.scatter(Proposal_obj[:, 0], Proposal_obj[:, 1], marker="*", label="CC_NSGA3_LINC-Rmin")
    plt.scatter(ref[:, 0], ref[:, 1], marker="<", label="Reference")
    plt.legend()
    plt.show()


def draw_pareto_3D(name, Proposal_obj, G_obj, DG_obj, LIMD_obj, ref):

    font_title = {'size': 18}
    font = {'size': 16}

    ax = plt.subplot(projection='3d')  # 创建一个三维的绘图工程
    ax.set_title("Pareto Front of " + name, font_title)  # 设置本图名称

    ax.scatter(DG_obj[:, 0], DG_obj[:, 1], DG_obj[:, 2], marker="^", label="CC_NSGA3_DG")
    ax.scatter(G_obj[:, 0], G_obj[:, 1], G_obj[:, 2], marker="v", label="CC_NSGA3_G")
    ax.scatter(LIMD_obj[:, 0], LIMD_obj[:, 1], LIMD_obj[:, 2], marker="+", label="CC_NSGA3_LIMD")
    ax.scatter(Proposal_obj[:, 0], Proposal_obj[:, 1], Proposal_obj[:, 2], marker="*", label="CC_NSGA3_LINC-Rmin")
    ax.scatter(ref[:, 0], ref[:, 1], ref[:, 2], marker="<", label="Reference")

    ax.set_xlabel("$f_1$", font)
    ax.set_ylabel("$f_2$", font)
    ax.set_zlabel("$f_3$", font)

    plt.legend()
    plt.show()


def HV_calculate(objs, ref):
    HVs = 0
    for obj in objs:
        HV = 1
        for i in range(len(obj)):
            HV *= (obj[i] - ref[i])
        HVs += HV
    return HVs / len(objs)


def IDG_calculate(objs, refs):
    IDGs = 0
    for obj in objs:
        IDG = []
        for ref in refs:
            IDG.append(Dis(obj, ref))
        IDGs += min(IDG)
    return IDGs / len(objs)


def Dis(s1, s2):
    dis = 0
    Dim = len(s1)
    for i in range(Dim):
        dis += (s1[i] - s2[i]) ** 2
    return np.sqrt(dis)

Dim = 2000

Problems = [zdt.ZDT1.ZDT1(Dim=Dim), zdt.ZDT2.ZDT2(Dim=Dim), zdt.ZDT3.ZDT3(Dim=Dim), zdt.ZDT4.ZDT4(Dim=Dim),
                zdt.ZDT5.ZDT5(Dim=Dim), zdt.ZDT6.ZDT6(Dim=Dim), dtlz.DTLZ1.DTLZ1(Dim=Dim), dtlz.DTLZ2.DTLZ2(Dim=Dim),
                dtlz.DTLZ3.DTLZ3(Dim=Dim), dtlz.DTLZ4.DTLZ4(Dim=Dim), dtlz.DTLZ5.DTLZ5(Dim=Dim),
                dtlz.DTLZ6.DTLZ6(Dim=Dim), dtlz.DTLZ7.DTLZ7(Dim=Dim), uf.UF1.UF1(Dim=Dim),
                uf.UF2.UF2(Dim=Dim)]

func_num = 0
problem = Problems[func_num]
ref = problem.calReferObjV()

G_obj = [
    [0.5642848066054285, 4.902449841765269],[0.9649318372830749, 4.777835064574752],[0.899746633502348, 4.8100801644342726],[0.7196521724267848, 4.869895587461069],[0.9547934752064201, 4.782128697536976],[0.7438053343909349, 4.843367745581082],[0.8431821884986112, 4.813505210217287],[0.7279613375249178, 4.851642359766512],[0.0, 4.927853330669494],[0.7288562190252895, 4.8508488452457685],[0.8042340128775732, 4.840694604638072],[0.6817430602030113, 4.881013416210044]
         ]
DG_obj = [
    [0.4397338577044092, 3.7799543438007355],[0.7532876668345223, 3.6777508327107316],[0.9883781608772443, 3.5687502965412907],[0.6838725953405876, 3.6998141674714775],[0.6483149119146013, 3.7073005327385284],[0.3706209069751087, 3.784428667748574],[0.3051241103735369, 3.8091959501846318],[0.5443308654337004, 3.7505660748208296],[0.5092613288669524, 3.756144132676732],[0.7843569481232998, 3.675165928147879],[0.30448494540069404, 3.811887682562844],[0.6040571734364141, 3.7405139859985295],[0.47370937699216187, 3.76284958247809],[0.0, 3.8253606528209785],[0.9362573586063778, 3.5757907646249234],[0.8663765883563745, 3.6438012899122816],[0.5719724008365676, 3.7431615677989463],[0.6763784103181255, 3.7030163382205004],[0.8767780319982161, 3.61556142205533],[0.41026355789538643, 3.7828809920724593],[1.0, 3.5462628640701244],[0.35032792914120686, 3.802519902174981],[0.30229253578482895, 3.8132796775930657],[0.8728930918517142, 3.6179863539996457],[0.7948588155835029, 3.667561364332606],[0.44502197628602874, 3.7716883703273734],[0.7290362675576088, 3.6855679852153864],[0.8320193191105129, 3.651371216411882],[0.7270313221656167, 3.6868321513017297],[0.6148343991280691, 3.7353949503997015]
          ]
LIMD_obj = [
[0.5102713560939558, 1.9312039527675562],[0.8701370765802704, 1.6934405733962499],[0.8634097249664698, 1.699490901531135],[0.8097014927957752, 1.7424481770013391],[0.7366799505553687, 1.7948594565006608],[0.7040280082751849, 1.814096826948997],[0.9396217077503137, 1.6214192204223583],[0.7221639122797077, 1.7995787529630314],[0.8368969612527172, 1.7244889535769805],[0.8120680357160427, 1.7360862333961669],[0.6958410259337698, 1.828935088693955],[0.4647757827985632, 1.9536143297196724],[0.7026413680567529, 1.8214355257781587],[0.3243687197372848, 2.0080521368686646],[0.7667371866990176, 1.7747083451547074],[0.7177250014101574, 1.8082818816581816],[0.35528969337823557, 1.9937562327405864],[0.5754786508482703, 1.8929318677048441],[0.35070785231368085, 1.996039142794294],[0.8451322496414361, 1.717426271335429],[0.5398852283747105, 1.9092820719053596],[0.644066577493573, 1.8476258354774007],[0.0048072919479207315, 2.057652257263807],[0.5905270709143009, 1.8845100342381444],[0.8935896922969913, 1.6690006183234773],[0.6033508263740701, 1.8740451811622623],[0.49810662513356996, 1.935584539456593],[0.5513668010975264, 1.903908090312294],[0.6746812551553232, 1.8314488766779091],[0.6678467868385729, 1.8448725146055136],[0.6211887375714346, 1.8665145815734883],[0.44005173951093124, 1.9657690427553904],[0.3264838539332311, 1.999762030744864],[0.9773534619301186, 1.5883657119226877],[0.8583138238449368, 1.7076174060656337],[0.9735335368920182, 1.5944763547737044],[0.917961588275105, 1.6459820869541324],[0.8728907143542265, 1.6845408681046596],[0.9702624452511269, 1.6010073196486811],[0.39949162824215423, 1.9799485033954118],[0.4838203898430572, 1.9385381926160192],[0.852921163669476, 1.7098571705433785],[0.98020674234279, 1.5861756903432989],[0.4283000663029814, 1.9670438830954002],[0.7361281093283387, 1.794908962030567],[0.5308749955698489, 1.909955460365749],[0.7525380214747504, 1.780156284271308],[0.34794106505068423, 1.997663636491231],[0.5875877303847092, 1.8918514939569593],[0.31040763040806696, 2.0114187901983716],[0.1245391048134202, 2.0430281751056674],[0.9862819026105282, 1.5811032398824343],[0.4036261679623589, 1.969207421355656],[0.6340464577931594, 1.8599983820833048],[0.4754932884004912, 1.9494575630002822],[0.0, 2.0604005367638796],[0.5533697634756125, 1.89446507837029],[0.7975967286738155, 1.7450692547527153],[0.9201652243445051, 1.6411402138232054],[0.6439304520554756, 1.8543700503009244],[0.3692914546592928, 1.9866480914987155],[0.3861832496640115, 1.9823799059044651],[0.8282744824844177, 1.7270765160828538],[0.90417707184251, 1.663122663147749],[0.7199900925511875, 1.804032675957835],[0.7725693762205217, 1.772913866704678],[0.8048651476796175, 1.7447520545909627],[0.6702895800630191, 1.8427077165255115],[0.17528020326458632, 2.0295219948972627],[0.0969862625572897, 2.056547528469901],[0.6984801046722491, 1.8216301912279493],[0.9509982211539746, 1.6172942166537037],[0.2665331483161333, 2.0200665945137644],[0.47838444134281666, 1.9425439998253993],[0.9384101140430244, 1.6286295467136995],[0.9877317039266956, 1.5729536985067833],[0.4597397656370622, 1.9540137913992903],[0.7800955495503046, 1.7544189073720602],[0.9140082501999826, 1.6491497188744662],[0.8644901396964172, 1.6970576947808524],[0.838684610952362, 1.7184945852814706],[0.5847386016249263, 1.8925142639662842],[0.13271551681970306, 2.0379953032940583],[0.5406021975813192, 1.9043153742638956],[0.40180287455577746, 1.9730274947833029],[0.29974496127772876, 2.013784179542137],[0.3812009226843233, 1.9835244024772234],[0.9620753140960187, 1.6051969882982098],[0.7728996344744934, 1.7626696813761427],[0.5289774488676713, 1.9255337151123142],[0.7779417434318053, 1.7585092161691527],[1.0, 1.564984912637249],[0.7170828294007208, 1.8133494593271535],[0.6030403746693151, 1.8839599275177041],[0.7414297178742905, 1.782742741312287],[0.35611823787273944, 1.987655530648903],[0.9553984851846314, 1.611683107195076],[0.696681193968356, 1.8287639149588082],[0.937756876146259, 1.6331895709239788],[0.9094592909141073, 1.6555458310914755]
]
Proposal_obj = [
    [0.6239050440090332, 4.9033218111735035],[0.9459906117990613, 4.771286914191478],[0.9514598889701151, 4.739184575595325],[0.168494398696477, 4.921252845580395],[0.45228487677454243, 4.910505409095746],[0.0, 4.9296985395496655],[0.7587659856169684, 4.84637811579642],[0.8496185365077255, 4.80547710603903],[0.6557008842937648, 4.850555398997022]
                ]
G_obj = np.array(G_obj)
DG_obj = np.array(DG_obj)
LIMD_obj = np.array(LIMD_obj)
Proposal_obj = np.array(Proposal_obj)

ref_point = ref[random.randint(0, len(ref))]

G_HV = HV_calculate(G_obj, ref_point)
DG_HV = HV_calculate(DG_obj, ref_point)
LIMD_HV = HV_calculate(LIMD_obj, ref_point)
Proposal_HV = HV_calculate(Proposal_obj, ref_point)

print("G HV", G_HV)
print("DG HV", DG_HV)
print("LIMD HV", LIMD_HV)
print("Proposal HV", Proposal_HV)

G_IDG = IDG_calculate(G_obj, ref[0:10])
DG_IDG = IDG_calculate(DG_obj, ref[0:10])
LIMD_IDG = IDG_calculate(LIMD_obj, ref[0:10])
Proposal_IDG = IDG_calculate(Proposal_obj, ref[0:10])

print("G IDG", G_IDG)
print("DG IDG", DG_IDG)
print("LIMD IDG", LIMD_IDG)
print("Proposal IDG", Proposal_IDG)

draw_pareto_2D(problem.name, Proposal_obj, G_obj, DG_obj, LIMD_obj, ref)
# draw_pareto_3D(problem.name, Proposal_obj, G_obj, DG_obj, LIMD_obj, ref)